From 6ef77aa395643355f3c49b7100c2bb032db99f0b Mon Sep 17 00:00:00 2001
From: Michael Campion <michael.campion@emutex.com>
Date: Thu, 19 Dec 2019 18:46:29 +0000
Subject: [PATCH] i2c: designware-platdrv: Use ACPI method FREQ to get i2c
 speed

The UP Board BIOS provides a method to specify the i2c speed for HAT i2c
ports. This commit adds the mechanisms to retrieve this value from the ACPI
method and apply it to the i2c controller.
---
 drivers/i2c/busses/i2c-designware-platdrv.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/i2c/busses/i2c-designware-platdrv.c b/drivers/i2c/busses/i2c-designware-platdrv.c
index eca5bc9..ea4b2b4 100644
--- a/drivers/i2c/busses/i2c-designware-platdrv.c
+++ b/drivers/i2c/busses/i2c-designware-platdrv.c
@@ -84,6 +84,19 @@ static void dw_i2c_acpi_params(struct platform_device *pdev, char method[],
 	kfree(buf.pointer);
 }
 
+static void dw_i2c_acpi_freq_param(struct platform_device *pdev, u32 *freq)
+{
+	acpi_handle handle = ACPI_HANDLE(&pdev->dev);
+	unsigned long long tmp;
+
+	if (ACPI_FAILURE(acpi_evaluate_integer(handle, "FREQ", NULL, &tmp)))
+		return;
+
+	*freq = (u32)tmp;
+	dev_dbg(&pdev->dev, "%u Hz bus speed specified by 'FREQ' ACPI method\n",
+		*freq);
+}
+
 static int dw_i2c_acpi_configure(struct platform_device *pdev)
 {
 	struct dw_i2c_dev *dev = platform_get_drvdata(pdev);
@@ -270,6 +283,9 @@ static int dw_i2c_plat_probe(struct platform_device *pdev)
 	else
 		i2c_parse_fw_timings(&pdev->dev, t, false);
 
+	if (has_acpi_companion(&pdev->dev))
+		dw_i2c_acpi_freq_param(pdev, &t->bus_freq_hz);
+
 	if (i2c_freq) {
 		dev_warn(&pdev->dev,
 			"I2C Frequency override by module parameter:"
-- 
2.7.4

